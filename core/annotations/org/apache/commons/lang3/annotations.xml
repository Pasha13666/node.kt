<root>
    <item name='org.apache.commons.lang3.Validate T notEmpty(T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.BooleanUtils boolean and(boolean...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils boolean[] nullToEmpty(boolean[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.EnumUtils java.util.Map&lt;java.lang.String,E&gt; getEnumMap(java.lang.Class&lt;E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils char[] add(char[], char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils byte[] add(byte[], byte)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T validIndex(T, int, java.lang.String, java.lang.Object...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T noNullElements(T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.SystemUtils java.io.File getJavaIoTmpDir()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.EnumUtils long generateBitVector(java.lang.Class&lt;E&gt;, E...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T validIndex(T, int, java.lang.String, java.lang.Object...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T notNull(T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate void isAssignableFrom(java.lang.Class&lt;?&gt;, java.lang.Class&lt;?&gt;, java.lang.String, java.lang.Object...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.RandomStringUtils java.lang.String randomAlphabetic(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ClassUtils java.lang.reflect.Method getPublicMethod(java.lang.Class&lt;?&gt;, java.lang.String, java.lang.Class&lt;?&gt;...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils float[] remove(float[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils java.lang.Float[] nullToEmpty(java.lang.Float[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.RandomStringUtils java.lang.String random(int, boolean, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils short[] remove(short[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T[] validIndex(T[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.BooleanUtils java.lang.Boolean xor(java.lang.Boolean...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils char[] nullToEmpty(char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils long[] add(long[], long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.StringUtils java.lang.String repeat(char, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils java.lang.Integer[] nullToEmpty(java.lang.Integer[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T notEmpty(T, java.lang.String, java.lang.Object...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Range T getMaximum()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T validIndex(T, int, java.lang.String, java.lang.Object...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate void isInstanceOf(java.lang.Class&lt;?&gt;, java.lang.Object, java.lang.String, java.lang.Object...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T notNull(T, java.lang.String, java.lang.Object...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T noNullElements(T, java.lang.String, java.lang.Object...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T[] noNullElements(T[], java.lang.String, java.lang.Object...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.RandomStringUtils java.lang.String randomNumeric(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T[] notEmpty(T[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.EnumUtils long generateBitVector(java.lang.Class&lt;E&gt;, E...) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils long[] remove(long[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils char[] remove(char[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.StringUtils java.lang.String toString(byte[], java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Range org.apache.commons.lang3.Range&lt;T&gt; between(T, T, java.util.Comparator&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.SerializationUtils java.lang.Object deserialize(java.io.InputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.CharUtils int toIntValue(java.lang.Character) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.StringUtils java.lang.String defaultString(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils float[] removeAll(float[], int...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils double[] remove(double[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T notEmpty(T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T notBlank(T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate void exclusiveBetween(T, T, java.lang.Comparable&lt;T&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ObjectUtils T median(java.util.Comparator&lt;T&gt;, T...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils boolean[] removeAll(boolean[], int...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.EnumUtils long generateBitVector(java.lang.Class&lt;E&gt;, java.lang.Iterable&lt;E&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T noNullElements(T, java.lang.String, java.lang.Object...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.EnumUtils java.util.List&lt;E&gt; getEnumList(java.lang.Class&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T validIndex(T, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Range org.apache.commons.lang3.Range&lt;T&gt; is(T, java.util.Comparator&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils byte[] removeAll(byte[], int...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils boolean[] remove(boolean[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T validIndex(T, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils T[] remove(T[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils double[] removeAll(double[], int...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Range org.apache.commons.lang3.Range&lt;T&gt; is(T, java.util.Comparator&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils byte[] remove(byte[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate void inclusiveBetween(T, T, java.lang.Comparable&lt;T&gt;, java.lang.String, java.lang.Object...) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils T[] add(T[], T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Range java.util.Comparator&lt;T&gt; getComparator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils java.lang.String[] nullToEmpty(java.lang.String[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T notNull(T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T notEmpty(T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T[] noNullElements(T[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ObjectUtils void identityToString(java.lang.StringBuffer, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils long[] removeAll(long[], int...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ClassUtils java.lang.reflect.Method getPublicMethod(java.lang.Class&lt;?&gt;, java.lang.String, java.lang.Class&lt;?&gt;...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.RandomStringUtils java.lang.String random(int, int, int, boolean, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.RandomStringUtils java.lang.String random(int, int, int, boolean, boolean, char...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T noNullElements(T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.EnumUtils long generateBitVector(java.lang.Class&lt;E&gt;, java.lang.Iterable&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.RandomStringUtils java.lang.String random(int, int, int, boolean, boolean, char[], java.util.Random)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.StringUtils int getLevenshteinDistance(java.lang.CharSequence, java.lang.CharSequence, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.EnumUtils java.util.List&lt;E&gt; getEnumList(java.lang.Class&lt;E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ObjectUtils T median(T...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Range org.apache.commons.lang3.Range&lt;T&gt; between(T, T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.StringUtils int getLevenshteinDistance(java.lang.CharSequence, java.lang.CharSequence) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.CharUtils char toChar(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T notBlank(T, java.lang.String, java.lang.Object...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils boolean isSameType(java.lang.Object, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.StringUtils int getLevenshteinDistance(java.lang.CharSequence, java.lang.CharSequence, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T notEmpty(T, java.lang.String, java.lang.Object...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils short[] nullToEmpty(short[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.CharSet CharSet(java.lang.String...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate void inclusiveBetween(T, T, java.lang.Comparable&lt;T&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils java.lang.Byte[] nullToEmpty(java.lang.Byte[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils double[] add(double[], double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.RandomStringUtils java.lang.String randomAscii(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Range org.apache.commons.lang3.Range&lt;T&gt; is(T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ObjectUtils void identityToString(java.lang.StringBuffer, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T[] validIndex(T[], int, java.lang.String, java.lang.Object...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.RandomStringUtils java.lang.String random(int, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.SystemUtils java.io.File getUserDir()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils int[] removeAll(int[], int...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils int[] remove(int[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Range int elementCompareTo(T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils java.lang.Short[] nullToEmpty(java.lang.Short[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.CharUtils char toChar(java.lang.Character) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ObjectUtils T median(java.util.Comparator&lt;T&gt;, T...) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.RandomStringUtils java.lang.String random(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T[] notEmpty(T[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils T[] removeAll(T[], int...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T[] validIndex(T[], int, java.lang.String, java.lang.Object...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils float[] add(float[], float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T[] validIndex(T[], int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T validIndex(T, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils java.lang.Long[] nullToEmpty(java.lang.Long[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.EnumUtils java.util.Map&lt;java.lang.String,E&gt; getEnumMap(java.lang.Class&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Range org.apache.commons.lang3.Range&lt;T&gt; between(T, T, java.util.Comparator&lt;T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T notEmpty(T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils boolean[] add(boolean[], boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Range org.apache.commons.lang3.Range&lt;T&gt; is(T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils java.lang.Double[] nullToEmpty(java.lang.Double[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.AnnotationUtils int hashCode(java.lang.annotation.Annotation) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils int[] nullToEmpty(int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.RandomStringUtils java.lang.String randomAlphanumeric(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T[] noNullElements(T[], java.lang.String, java.lang.Object...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.AnnotationUtils java.lang.String toString(java.lang.annotation.Annotation) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils short[] removeAll(short[], int...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.BooleanUtils java.lang.Boolean or(java.lang.Boolean...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T notNull(T, java.lang.String, java.lang.Object...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.RandomStringUtils java.lang.String random(int, char...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils short[] add(short[], short)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate void isAssignableFrom(java.lang.Class&lt;?&gt;, java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.SystemUtils java.io.File getJavaHome()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.BooleanUtils boolean xor(boolean...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils float[] nullToEmpty(float[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T validIndex(T, int, java.lang.String, java.lang.Object...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.SerializationUtils void serialize(java.io.Serializable, java.io.OutputStream) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Range org.apache.commons.lang3.Range&lt;T&gt; between(T, T, java.util.Comparator&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.SystemUtils java.io.File getUserHome()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils java.lang.Boolean[] nullToEmpty(java.lang.Boolean[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T notEmpty(T, java.lang.String, java.lang.Object...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Range org.apache.commons.lang3.Range&lt;T&gt; intersectionWith(org.apache.commons.lang3.Range&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T[] notEmpty(T[], java.lang.String, java.lang.Object...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T notEmpty(T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T[] noNullElements(T[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils int[] add(int[], int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate void isInstanceOf(java.lang.Class&lt;?&gt;, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.SerializationUtils java.lang.Object deserialize(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T notEmpty(T, java.lang.String, java.lang.Object...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T notBlank(T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils long[] nullToEmpty(long[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils char[] removeAll(char[], int...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils java.lang.Character[] nullToEmpty(java.lang.Character[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T notEmpty(T, java.lang.String, java.lang.Object...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Range T getMinimum()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T validIndex(T, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils boolean isSameType(java.lang.Object, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T notEmpty(T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate void exclusiveBetween(T, T, java.lang.Comparable&lt;T&gt;, java.lang.String, java.lang.Object...) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils byte[] nullToEmpty(byte[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Range org.apache.commons.lang3.Range&lt;T&gt; between(T, T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.EnumUtils java.util.EnumSet&lt;E&gt; processBitVector(java.lang.Class&lt;E&gt;, long) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.JavaVersion boolean atLeast(org.apache.commons.lang3.JavaVersion) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T[] notEmpty(T[], java.lang.String, java.lang.Object...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.SystemUtils boolean isJavaVersionAtLeast(org.apache.commons.lang3.JavaVersion) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Range org.apache.commons.lang3.Range&lt;T&gt; between(T, T) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.BooleanUtils boolean or(boolean...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils java.lang.Object[] nullToEmpty(java.lang.Object[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.StringUtils int getLevenshteinDistance(java.lang.CharSequence, java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T notEmpty(T, java.lang.String, java.lang.Object...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.Validate T notBlank(T, java.lang.String, java.lang.Object...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.ArrayUtils double[] nullToEmpty(double[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.apache.commons.lang3.BooleanUtils java.lang.Boolean and(java.lang.Boolean...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
