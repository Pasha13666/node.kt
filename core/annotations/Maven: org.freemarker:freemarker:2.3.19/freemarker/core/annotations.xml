<?xml version="1.0" encoding="UTF-8"?>
<root>
  <item name="freemarker.core.ArithmeticEngine int compareNumbers(java.lang.Number, java.lang.Number) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
    <annotation name="org.jetbrains.kannotator.runtime.annotations.Propagated">
      <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}" />
    </annotation>
  </item>
  <item name="freemarker.core.ArithmeticEngine int compareNumbers(java.lang.Number, java.lang.Number) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
    <annotation name="org.jetbrains.kannotator.runtime.annotations.Propagated">
      <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}" />
    </annotation>
  </item>
  <item name="freemarker.core.ArithmeticEngine java.lang.Number add(java.lang.Number, java.lang.Number) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
    <annotation name="org.jetbrains.kannotator.runtime.annotations.Propagated">
      <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}" />
    </annotation>
  </item>
  <item name="freemarker.core.ArithmeticEngine java.lang.Number add(java.lang.Number, java.lang.Number) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
    <annotation name="org.jetbrains.kannotator.runtime.annotations.Propagated">
      <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}" />
    </annotation>
  </item>
  <item name="freemarker.core.ArithmeticEngine java.lang.Number divide(java.lang.Number, java.lang.Number) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
    <annotation name="org.jetbrains.kannotator.runtime.annotations.Propagated">
      <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}" />
    </annotation>
  </item>
  <item name="freemarker.core.ArithmeticEngine java.lang.Number divide(java.lang.Number, java.lang.Number) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
    <annotation name="org.jetbrains.kannotator.runtime.annotations.Propagated">
      <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}" />
    </annotation>
  </item>
  <item name="freemarker.core.ArithmeticEngine java.lang.Number modulus(java.lang.Number, java.lang.Number)">
    <annotation name="org.jetbrains.annotations.NotNull" />
    <annotation name="org.jetbrains.kannotator.runtime.annotations.Propagated">
      <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}" />
    </annotation>
  </item>
  <item name="freemarker.core.ArithmeticEngine java.lang.Number modulus(java.lang.Number, java.lang.Number) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
    <annotation name="org.jetbrains.kannotator.runtime.annotations.Propagated">
      <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}" />
    </annotation>
  </item>
  <item name="freemarker.core.ArithmeticEngine java.lang.Number modulus(java.lang.Number, java.lang.Number) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
    <annotation name="org.jetbrains.kannotator.runtime.annotations.Propagated">
      <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}" />
    </annotation>
  </item>
  <item name="freemarker.core.ArithmeticEngine java.lang.Number multiply(java.lang.Number, java.lang.Number) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
    <annotation name="org.jetbrains.kannotator.runtime.annotations.Propagated">
      <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}" />
    </annotation>
  </item>
  <item name="freemarker.core.ArithmeticEngine java.lang.Number multiply(java.lang.Number, java.lang.Number) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
    <annotation name="org.jetbrains.kannotator.runtime.annotations.Propagated">
      <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}" />
    </annotation>
  </item>
  <item name="freemarker.core.ArithmeticEngine java.lang.Number subtract(java.lang.Number, java.lang.Number) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
    <annotation name="org.jetbrains.kannotator.runtime.annotations.Propagated">
      <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}" />
    </annotation>
  </item>
  <item name="freemarker.core.ArithmeticEngine java.lang.Number subtract(java.lang.Number, java.lang.Number) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
    <annotation name="org.jetbrains.kannotator.runtime.annotations.Propagated">
      <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}" />
    </annotation>
  </item>
  <item name="freemarker.core.ArithmeticEngine.BigDecimalEngine int compareNumbers(java.lang.Number, java.lang.Number) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.ArithmeticEngine.BigDecimalEngine int compareNumbers(java.lang.Number, java.lang.Number) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.ArithmeticEngine.BigDecimalEngine java.lang.Number add(java.lang.Number, java.lang.Number) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.ArithmeticEngine.BigDecimalEngine java.lang.Number add(java.lang.Number, java.lang.Number) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.ArithmeticEngine.BigDecimalEngine java.lang.Number divide(java.lang.Number, java.lang.Number) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.ArithmeticEngine.BigDecimalEngine java.lang.Number divide(java.lang.Number, java.lang.Number) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.ArithmeticEngine.BigDecimalEngine java.lang.Number modulus(java.lang.Number, java.lang.Number)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.ArithmeticEngine.BigDecimalEngine java.lang.Number modulus(java.lang.Number, java.lang.Number) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.ArithmeticEngine.BigDecimalEngine java.lang.Number modulus(java.lang.Number, java.lang.Number) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.ArithmeticEngine.BigDecimalEngine java.lang.Number multiply(java.lang.Number, java.lang.Number) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.ArithmeticEngine.BigDecimalEngine java.lang.Number multiply(java.lang.Number, java.lang.Number) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.ArithmeticEngine.BigDecimalEngine java.lang.Number subtract(java.lang.Number, java.lang.Number) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.ArithmeticEngine.BigDecimalEngine java.lang.Number subtract(java.lang.Number, java.lang.Number) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.ArithmeticEngine.BigDecimalEngine java.lang.Number toNumber(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.ArithmeticEngine.ConservativeEngine int compareNumbers(java.lang.Number, java.lang.Number) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.ArithmeticEngine.ConservativeEngine int compareNumbers(java.lang.Number, java.lang.Number) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.ArithmeticEngine.ConservativeEngine java.lang.Number add(java.lang.Number, java.lang.Number) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.ArithmeticEngine.ConservativeEngine java.lang.Number add(java.lang.Number, java.lang.Number) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.ArithmeticEngine.ConservativeEngine java.lang.Number divide(java.lang.Number, java.lang.Number) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.ArithmeticEngine.ConservativeEngine java.lang.Number divide(java.lang.Number, java.lang.Number) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.ArithmeticEngine.ConservativeEngine java.lang.Number modulus(java.lang.Number, java.lang.Number) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.ArithmeticEngine.ConservativeEngine java.lang.Number modulus(java.lang.Number, java.lang.Number) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.ArithmeticEngine.ConservativeEngine java.lang.Number multiply(java.lang.Number, java.lang.Number) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.ArithmeticEngine.ConservativeEngine java.lang.Number multiply(java.lang.Number, java.lang.Number) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.ArithmeticEngine.ConservativeEngine java.lang.Number subtract(java.lang.Number, java.lang.Number) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.ArithmeticEngine.ConservativeEngine java.lang.Number subtract(java.lang.Number, java.lang.Number) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Configurable Configurable(freemarker.core.Configurable) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Configurable freemarker.template.TemplateException invalidSettingValueException(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Configurable freemarker.template.TemplateException unknownSettingException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Configurable java.lang.Object clone()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Configurable java.util.ArrayList parseAsList(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Configurable java.util.ArrayList parseAsList(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Configurable java.util.ArrayList parseAsSegmentedList(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Configurable java.util.ArrayList parseAsSegmentedList(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Configurable java.util.HashMap parseAsImportList(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Configurable java.util.HashMap parseAsImportList(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Configurable void setArithmeticEngine(freemarker.core.ArithmeticEngine) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Configurable void setBooleanFormat(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Configurable void setDateFormat(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Configurable void setDateTimeFormat(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Configurable void setLocale(java.util.Locale) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Configurable void setNewBuiltinClassResolver(freemarker.core.TemplateClassResolver) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Configurable void setNumberFormat(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Configurable void setObjectWrapper(freemarker.template.ObjectWrapper) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Configurable void setSettings(java.util.Properties) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Configurable void setTemplateExceptionHandler(freemarker.template.TemplateExceptionHandler) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Configurable void setTimeFormat(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Configurable void setTimeZone(java.util.TimeZone) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.CustomAttribute java.lang.Object get(freemarker.template.Template) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.CustomAttribute void set(java.lang.Object, freemarker.template.Template) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.DebugBreak DebugBreak(freemarker.core.TemplateElement) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.DebugBreak void accept(freemarker.core.Environment) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
    <annotation name="org.jetbrains.kannotator.runtime.annotations.Propagated">
      <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}" />
    </annotation>
  </item>
  <item name="freemarker.core.Environment Environment(freemarker.template.Template, freemarker.template.TemplateHashModel, java.io.Writer) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Environment freemarker.core.Environment.Namespace getNamespace(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Environment freemarker.core.Environment.Namespace importLib(freemarker.template.Template, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Environment freemarker.template.Template getTemplateForImporting(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Environment freemarker.template.Template getTemplateForInclusion(java.lang.String, java.lang.String, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Environment freemarker.template.TemplateHashModel getDataModel()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Environment freemarker.template.TemplateHashModel getGlobalVariables()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Environment java.lang.String getNamespaceForPrefix(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Environment java.util.Set getKnownVariableNames()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Environment void include(freemarker.template.Template) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Environment void outputInstructionStack(java.io.PrintWriter) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Environment void setDateFormat(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Environment void setDateTimeFormat(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Environment void setLocale(java.util.Locale) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Environment void setNumberFormat(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Environment void setTemplateExceptionHandler(freemarker.template.TemplateExceptionHandler) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Environment void setTimeFormat(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Environment void setTimeZone(java.util.TimeZone) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.Environment void visit(freemarker.core.TemplateElement, freemarker.template.TemplateDirectiveModel, java.util.Map, java.util.List) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.AttemptBlock Attempt()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.BreakInstruction Break()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.BuiltinVariable BuiltinVariable()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.Case Case()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.Comment Comment()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.CompressedBlock Compress()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.DollarVariable StringOutput()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.EscapeBlock Escape()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.Expression AddSubExpression(freemarker.core.Expression)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.Expression BooleanLiteral()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.Expression BuiltIn(freemarker.core.Expression)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.Expression DefaultTo(freemarker.core.Expression)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.Expression DotVariable(freemarker.core.Expression)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.Expression DynamicKey(freemarker.core.Expression)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.Expression Exists(freemarker.core.Expression)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.Expression IdentifierOrStringLiteral()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.Expression NumberLiteral()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.Expression Parenthesis()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.Expression PrimaryExpression()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.Expression UnaryPlusMinusExpression()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.FMParser createExpressionParser(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.FMParser createExpressionParser(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.FallbackInstruction FallBack()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.HashLiteral HashLiteral()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.Identifier Identifier()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.Include Include()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.IteratorBlock ForEach()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.IteratorBlock List()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.LibraryLoad Import()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.ListLiteral ListLiteral()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.Macro Macro()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.MethodCall MethodArgs(freemarker.core.Expression)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.NoEscapeBlock NoEscape()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.NumericalOutput NumericalOutput()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.ParseException generateParseException()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.PropertySetting Setting()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.RecoveryBlock Recover()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.RecurseNode Recurse()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.ReturnInstruction Return()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.StopInstruction Stop()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.StringLiteral StringLiteral(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.SwitchBlock Switch()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.TemplateElement Assign()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.TemplateElement Call()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.TemplateElement Content()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.TemplateElement Flush()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.TemplateElement FreeMarkerText()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.TemplateElement FreemarkerDirective()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.TemplateElement If()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.TemplateElement Nested()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.TemplateElement OptionalBlock()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.TemplateElement Root()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.TemplateElement Trim()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.TemplateElement UnifiedMacroTransform()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.TextBlock NoParse()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.TextBlock PCData()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.Token UnparsedContent(java.lang.StringBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.Token UnparsedContent(java.lang.StringBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.TransformBlock Transform()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser freemarker.core.VisitNode Visit()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser java.util.ArrayList PositionalArgs()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser java.util.HashMap NamedArgs()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FMParser java.util.Map ParamList()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FreeMarkerTree FreeMarkerTree(freemarker.template.Template) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FreeMarkerTree java.lang.String convertValueToText(java.lang.Object, boolean, boolean, boolean, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.FreeMarkerTree void setTemplate(freemarker.template.Template) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.LocalContext freemarker.template.TemplateModel getLocalVariable(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
    <annotation name="org.jetbrains.kannotator.runtime.annotations.Propagated">
      <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}" />
    </annotation>
  </item>
  <item name="freemarker.core.LocalContext java.util.Collection getLocalVariableNames()">
    <annotation name="org.jetbrains.annotations.NotNull" />
    <annotation name="org.jetbrains.kannotator.runtime.annotations.Propagated">
      <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}" />
    </annotation>
  </item>
  <item name="freemarker.core.OptInTemplateClassResolver java.lang.Class resolve(java.lang.String, freemarker.core.Environment, freemarker.template.Template) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
    <annotation name="org.jetbrains.kannotator.runtime.annotations.Propagated">
      <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}" />
    </annotation>
  </item>
  <item name="freemarker.core.ParseException ParseException(java.lang.String, freemarker.core.TemplateObject) 1">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.ParseException java.lang.String add_escapes(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.SimpleCharStream char[] GetSuffix(int)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.StopException void printStackTrace(java.io.PrintStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.StopException void printStackTrace(java.io.PrintWriter) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.StringArraySequence freemarker.template.TemplateModel get(int)">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.TemplateClassResolver java.lang.Class resolve(java.lang.String, freemarker.core.Environment, freemarker.template.Template) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
    <annotation name="org.jetbrains.kannotator.runtime.annotations.Propagated">
      <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}" />
    </annotation>
  </item>
  <item name="freemarker.core.TemplateElement freemarker.template.TemplateSequenceModel getChildNodes()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.TemplateElement java.lang.String getDescription()">
    <annotation name="org.jetbrains.annotations.NotNull" />
    <annotation name="org.jetbrains.kannotator.runtime.annotations.Propagated">
      <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}" />
    </annotation>
  </item>
  <item name="freemarker.core.TemplateElement java.lang.String getNodeType()">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.TemplateObject java.lang.String getCanonicalForm()">
    <annotation name="org.jetbrains.annotations.NotNull" />
    <annotation name="org.jetbrains.kannotator.runtime.annotations.Propagated">
      <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}" />
    </annotation>
  </item>
  <item name="freemarker.core.TemplateObject java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull" />
    <annotation name="org.jetbrains.kannotator.runtime.annotations.Propagated">
      <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}" />
    </annotation>
  </item>
  <item name="freemarker.core.TextBlock TextBlock(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.TextBlock TextBlock(java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.TextBlock void accept(freemarker.core.Environment) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.TokenMgrError TokenMgrError(boolean, int, int, int, java.lang.String, char, int) 4">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.TokenMgrError java.lang.String LexicalError(boolean, int, int, int, java.lang.String, char) 4">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
  <item name="freemarker.core.TokenMgrError java.lang.String addEscapes(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull" />
  </item>
</root>

